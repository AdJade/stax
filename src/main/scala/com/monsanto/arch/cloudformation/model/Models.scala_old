package com.monsanto.arch.cloudformation.model

import spray.json._
import shapeless._
import UnaryTCConstraint._

/**
 * Created by Ryan Richt on 1/16/15
 */

case class CloudFormationTemplate[
                                  HListParameterTypes <: HList : *->*[CFParameterTypeValue]#λ, // this means an HList of CFParameter[T]'s for many T's
                                  OutputType](
                                   AWSTemplateFormatVersion: String,
                                   Description:              String,
                                   Parameters:               HListParameterTypes,
                                   Mappings:                 Seq[CFMapping],
                                   Resources:                Seq[CFResource],
                                   Outputs:                  Seq[CFOutput[OutputType]] // future: HList
                                   )
object CloudFormationTemplate extends DefaultJsonProtocol{

  object hlistElementJson extends Poly1{
    implicit def caseAny[T : JsonFormat] = at[T]( t => implicitly[JsonFormat[T]].write(t) )
  }

  implicit def hlistFormat: JsonWriter[HList] = new JsonWriter[HList] {
    def write(obj: HList) = JsArray( obj.map(hlistElementJson).toList[JsValue].toVector )
  }

  implicit def format[
                      HListParameterTypes <: HList : *->*[CFParameterTypeValue]#λ,
                      T : JsonFormat
    ]: RootJsonFormat[CloudFormationTemplate[HListParameterTypes, T]] = jsonFormat6(CloudFormationTemplate.apply[HListParameterTypes, T])
}

case class CFMapping()
case class CFResource()

