package com.monsanto.arch.cloudformation.model

/**
 * Created by Ryan Richt on 1/18/15
 */

case class ValidCombo[Type               <: CFParameterTypeValue[Type],
                      MinValueType       <: Option[Type#V],
                      MaxValueType       <: Option[Type#V],
                      AllowedValuesType  <: Option[Seq[Type#V]],
                      AllowedPatternType <: Option[String]] private () // do not allow others to declare valid combos
object ValidCombo{

  type NoneT = Option[Nothing]

  type AWSCustoms = `AWS::EC2::KeyPair::KeyName` with `AWS::EC2::SecurityGroup::Id` with `AWS::EC2::Subnet::Id` with `AWS::EC2::VPC::Id` with
    `List<AWS::EC2::VPC::Id>` with `List<AWS::EC2::SecurityGroup::Id>` with `List<AWS::EC2::Subnet::Id>`

  implicit val string: ValidCombo[CFString, NoneT, NoneT, Option[Seq[String]], Option[String]] = ValidCombo[CFString, NoneT, NoneT, Option[Seq[String]], Option[String]]()
  implicit def number[N](implicit ev: N <:< Int with Float): ValidCombo[CFNumber[N], Option[N], Option[N], Option[Seq[N]], NoneT] = ValidCombo[CFNumber[N], Option[N], Option[N], Option[Seq[N]], NoneT]()
  implicit def listNumber[N](implicit ev: N <:< Int with Float): ValidCombo[CFListNumber[N], NoneT, NoneT, NoneT, NoneT] = ValidCombo[CFListNumber[N], NoneT, NoneT, NoneT, NoneT]()
  implicit def commaList[N]: ValidCombo[CFCommaDelimitedList, NoneT, NoneT, NoneT, NoneT] = ValidCombo[CFCommaDelimitedList, NoneT, NoneT, NoneT, NoneT]()

  implicit def awsSpecific[T <: CFParameterTypeValue[T]](implicit ev: T <:< AWSCustoms): ValidCombo[T, NoneT, NoneT, NoneT, NoneT] = ValidCombo[T, NoneT, NoneT, NoneT, NoneT]()
}